[{"C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\index.js":"1","C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\reportWebVitals.js":"2","C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\App.js":"3","C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\pages\\Home\\index.js":"4","C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\pages\\Equipment\\index.js":"5","C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\pages\\Contact\\index.js":"6","C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\components\\Header\\index.js":"7","C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\pages\\CalcResults\\index.js":"8","C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\pages\\Calculator\\index.js":"9","C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\components\\Results\\index.js":"10","C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\components\\Hero\\index.js":"11","C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\components\\HomeCards\\index.js":"12","C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\components\\EquipmentHero\\index.js":"13","C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\components\\EquipmentCards\\index.js":"14","C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\components\\Footer\\index.js":"15","C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\components\\ContactForm\\index.js":"16"},{"size":742,"mtime":1614756885824,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":1183,"mtime":1614756885812,"results":"20","hashOfConfig":"18"},{"size":350,"mtime":1614756885828,"results":"21","hashOfConfig":"18"},{"size":438,"mtime":1614756885826,"results":"22","hashOfConfig":"18"},{"size":893,"mtime":1616005274787,"results":"23","hashOfConfig":"18"},{"size":3127,"mtime":1614756885819,"results":"24","hashOfConfig":"18"},{"size":468,"mtime":1613707904428,"results":"25","hashOfConfig":"18"},{"size":6458,"mtime":1610859773962,"results":"26","hashOfConfig":"18"},{"size":2718,"mtime":1611000010866,"results":"27","hashOfConfig":"18"},{"size":1838,"mtime":1616534141827,"results":"28","hashOfConfig":"18"},{"size":5123,"mtime":1615596704209,"results":"29","hashOfConfig":"18"},{"size":2068,"mtime":1616534237431,"results":"30","hashOfConfig":"18"},{"size":8047,"mtime":1616535199880,"results":"31","hashOfConfig":"18"},{"size":586,"mtime":1615524844177,"results":"32","hashOfConfig":"18"},{"size":6476,"mtime":1616005239702,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1qg2pqn",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},"C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\index.js",[],["70","71"],"C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\reportWebVitals.js",[],"C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\App.js",[],"C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\pages\\Home\\index.js",[],"C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\pages\\Equipment\\index.js",[],"C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\pages\\Contact\\index.js",[],"C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\components\\Header\\index.js",[],"C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\pages\\CalcResults\\index.js",["72","73"],"import react from 'react';\nimport {Redirect} from 'react-router-dom';\nimport Snapshot from '../../components/Results';\n\n\nconst CalcResults = () =>{\n\n    const data = JSON.parse(localStorage.getItem('customer-data'));\n    console.log('customer-data', data)\n\n    if(data.name === '' || data.billAmount == \n    0 ){\n        return <Redirect to= '/estimate'/>\n    }\n    \n\n    return(\n        <div>\n            <Snapshot/>\n        </div>\n    )\n}\n\nexport default CalcResults","C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\pages\\Calculator\\index.js",[],"C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\components\\Results\\index.js",["74","75","76"],"import React, {useState} from 'react';\n\n    const rates = {\n        1 : 0.23, //0-100\n        2 : 0.25, //101-150\n        3 : 0.27, //150-200\n        4 : 0.275,//201-300\n        5 : 0.28, //300+\n    }\n\n    const sunHours= 1325;\n\nconst Snapshot= () => {\n    //get form data from local storage\n    const data = JSON.parse(localStorage.getItem('customer-data'));\n    console.log(data)\n\n    const [monthly, setMonthly] = useState(0)\n\n    const billPrice = data.billAmount\n    console.log('bill price', billPrice)\n\n    \n    \n    function setRate(billPrice){\n        if(billPrice <= 100){\n            return (billPrice / rates[1]) * 12 / sunHours\n        }else if(billPrice>= 101 && billPrice <=150){\n            return (billPrice / rates[2]) *12 / sunHours\n        }else if(billPrice>= 151 && billPrice <=200){\n            return (billPrice / rates[3]) *12 / sunHours\n        }else if(billPrice>= 201 && billPrice <=300){\n            return ((billPrice /  rates[4]) *12) / sunHours\n        }\n        else {\n            return ((billPrice / rates[5])*12) /sunHours\n        }\n        \n    }\n    \n    const systemPrice = (setRate(billPrice) * 1000)*4.00 \n    console.log('yearlydude', systemPrice)\n    \n    \n\n    function getTaxIncentive(total){\n        \n        let incentive = systemPrice * 0.26\n        \n        return incentive.toFixed(2)\n    }\n\n    const taxCredit = getTaxIncentive()\n\n            \n    const interest = .04\n\n    const p = systemPrice\n\n    const r = interest/12\n\n    const t = 240\n    let usablePay = '0'\n\n    function getPayment(p,r,t){\n        \n\n        console.log(p)\n\n\n        const d =  (Math.pow((1+r), t) - 1 ) / (r * (Math.pow((1+r),t)))\n    \n        const payment = (p / d).toFixed(2)\n        \n    \n    \n        return payment\n\n    \n    }\n\n    const yearlySave = ((billPrice - getPayment(p,r,t))*12).toFixed(2)\n    \n\n    \n    \n    const totalYearOne = (parseFloat(yearlySave)+ parseFloat(taxCredit)).toFixed(2)\n    console.log('numbers needed',totalYearOne)\n    \n\n    return(\n        <div>\n            <div>\n                <h4>Hey {data.name.charAt(0).toUpperCase() + data.name.slice(1)}, Great news looks like solar could be advantageous for your home!</h4>\n                <p><strong>REMEMBER</strong> This is a rough estimate there are several factors that could still lower your savings or disqualify your home, but if you like what you see lets find out, get a quote today!</p>\n                    <h1>Financing as low as ${getPayment(p,r,t)}/mo </h1>\n                    <h1>Estimated Federal Tax Incentive ${getTaxIncentive()}</h1>\n                    <h1>Year one total Savings ${totalYearOne}</h1>\n                    \n            </div>\n        </div>\n    )\n}\n\nexport default Snapshot;","C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\components\\Hero\\index.js",[],"C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\components\\HomeCards\\index.js",[],"C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\components\\EquipmentHero\\index.js",[],"C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\components\\EquipmentCards\\index.js",[],"C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\components\\Footer\\index.js",[],"C:\\Users\\ndino\\Desktop\\SolarBeat Price Estimatior\\solar-beat\\src\\components\\ContactForm\\index.js",["77","78"],"import React, {useState} from 'react';\nimport {Paper, TextField, FormControl, RadioGroup, FormControlLabel, Button, Radio, FormLabel} from '@material-ui/core'\nimport {makeStyles} from '@material-ui/core/styles'\nimport { Autorenew } from '@material-ui/icons';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 400,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    formContainer: {\n        height: 'fit',\n        width: 'auto',\n        margins: 'auto',\n        padding: '2em',\n        boxShadow: '0 5px 5px 4px',\n        border: '5px solid grey',\n        borderRadius: 26,\n    }\n}));\n\n\n\nconst ContactForm = () => {\n    const initialValues = {\n        name: '',\n        email: '',\n        address: '',\n        city: '',\n        state: '',\n        zip: 0,\n        phone: '',\n        owner: true,\n        \n    }\n\n    const [values, setValue] = useState(initialValues);\n    const [errors, setErrors] = useState({})\n\n    \n    const validate = () => {\n        let temp = {};\n        temp.name = values.name?'':\"This field is required\"\n        temp.email = (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/).test(values.email)?'' :\"Not a valid email\"\n        temp.address = values.address?'':\"This Field is required\"\n        temp.city = values.city?'':\"This Field is required\"\n        temp.state = values.state?'':\"This Field is required\"\n        temp.zip =  (/^\\d{5}$/).test(values.zip)?'':\"Enter a 5 digit zip code\"\n        temp.phone = (/^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/).test(values.phone)?'':\"Not a valid phone number\"\n        temp.owner = values.owner === true ? '':\"You must be a homeowner to go solar\"\n        setErrors({\n            ...temp\n        })\n        console.log('temp',temp)\n        \n        return Object.values(temp).every(x => x == '' )\n        \n    }\n    const classes = useStyles();\n\n    const handleChange=(event)=>{\n        \n        const {name ,value} = event.target;\n\n        setValue({\n            ...values,\n            [name]: value\n        });\n        console.log(values)\n        \n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        console.log('submit', values, errors)\n        if(validate()){\n            alert('works biotch')\n            console.log('errors submit', errors)\n        }else{ alert('Fix form errors')}\n    }\n\n    return (\n        <Paper elevation ={3} varients=\"outlined\" className={classes.formContainer} >\n            <h1>How can we Help you</h1>\n                <form onSubmit={handleSubmit}>\n                    <TextField \n                        className={classes.formControl} \n                        onChange = {handleChange}\n                        id=\"name\" \n                        name=\"name\" \n                        label=\"Name\" \n                        variant=\"filled\" \n                        helperText={errors.name}\n                        error = {errors.name}\n                    />\n                    <TextField \n                        onChange = {handleChange}\n                        className={classes.formControl} \n                        id=\"email\" \n                        name=\"email\" \n                        label=\"Email\" \n                        variant=\"filled\"\n                        helperText={errors.email}\n                        error = {errors.email}\n                        />\n                    <TextField \n                        className={classes.formControl} \n                        onChange = {handleChange}\n                        id=\"address\" \n                        name=\"address\" \n                        label=\"Address\" \n                        variant=\"filled\" \n                        helperText={errors.address}\n                        error = {errors.address}\n                        />\n                    <TextField \n                        className={classes.formControl} \n                        onChange = {handleChange}\n                        id=\"city\" \n                        name=\"city\" \n                        label=\"City\" \n                        variant=\"filled\"\n                        helperText={errors.city}\n                        error = {errors.city} \n                        />\n                        <TextField \n                        className={classes.formControl} \n                        onChange = {handleChange}\n                        id=\"state\" \n                        name=\"state\" \n                        label=\"State\" \n                        variant=\"filled\" \n                        helperText={errors.state}\n                        error = {errors.state}\n                        />\n                    <TextField \n                        className={classes.formControl} \n                        onChange = {handleChange}\n                        id=\"zip\" \n                        name=\"zip\" \n                        label=\"Zip Code\" \n                        variant=\"filled\"\n                        helperText={errors.zip}\n                        error = {errors.zip}\n                        />\n                    <TextField \n                        classzip={classes.formControl} \n                        onChange = {handleChange}\n                        id=\"phone\" \n                        name=\"phone\" \n                        label=\"Phone\" \n                        variant=\"filled\" \n                        helperText={errors.phone}\n                        error = {errors.phone}\n                        />\n                    \n\n\n                    <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">Do You Own Your Home?</FormLabel>\n                        <br/>\n                        <RadioGroup aria-label=\"owner\" name=\"owner1\" value={values.owner} onChange={handleChange}>\n                            <FormControlLabel value= {true} control={<Radio />} label=\"I own\" />\n                            <FormControlLabel value={false} control={<Radio />} label=\"I am renting\" />\n                        </RadioGroup>\n                    </FormControl>\n                    <br/>\n                    <Button \n                        variant=\"contained\" \n                        color=\"secondary\" \n                        type='submit'\n                        disabled >\n                            Request a Quote\n                    </Button>\n\n                </form>\n            </Paper>\n    )\n}\n\nexport default ContactForm;",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":8,"nodeType":"85","messageId":"86","endLine":1,"endColumn":13},{"ruleId":"87","severity":1,"message":"88","line":11,"column":44,"nodeType":"89","messageId":"90","endLine":11,"endColumn":46},{"ruleId":"83","severity":1,"message":"91","line":18,"column":12,"nodeType":"85","messageId":"86","endLine":18,"endColumn":19},{"ruleId":"83","severity":1,"message":"92","line":18,"column":21,"nodeType":"85","messageId":"86","endLine":18,"endColumn":31},{"ruleId":"83","severity":1,"message":"93","line":63,"column":9,"nodeType":"85","messageId":"86","endLine":63,"endColumn":18},{"ruleId":"83","severity":1,"message":"94","line":4,"column":10,"nodeType":"85","messageId":"86","endLine":4,"endColumn":19},{"ruleId":"87","severity":1,"message":"88","line":60,"column":49,"nodeType":"89","messageId":"90","endLine":60,"endColumn":51},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'monthly' is assigned a value but never used.","'setMonthly' is assigned a value but never used.","'usablePay' is assigned a value but never used.","'Autorenew' is defined but never used.","no-global-assign","no-unsafe-negation"]